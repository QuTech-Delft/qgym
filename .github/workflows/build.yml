# This file is largely based on OpenQL (Apache 2.0 License, Copyright [2016] [Nader Khammassi & Imran Ashraf, QuTech, TU Delft]): https://github.com/QuTech-Delft/OpenQL/blob/develop/LICENSE
# For the original file see: https://github.com/QuTech-Delft/OpenQL/blob/.github/workflows/assets.yml
#
# Changes were made by removing unsupported Python versions, the commented conda build, the release job, and the
# uploading of release assets. Moreover, steps that use common actions were updated to recent versions, and the
# 'Wheel path' step was modernized.
#
# Also, the names of this pipeline/some jobs were altered. Also, 'fail-fast: false'
# was removed, since we don't need this to quickfix the issues with upload-release-asset. Furthermore, removed
# swig install for macOS, since this is pre-installed in the image. Also, removed the commented swig install line for
# Windows for the same reason.
#
# Also versions of dependencies have been updated to recent, compatible versions. The installation of auditwheel for
# the manylinux container was skipped, since it is pre-installed. The auditwheel call was adapted to follow this.

name: Build

on: workflow_call

jobs:
  macos:
    name: Wheels for macOS
    runs-on: macos-latest
    strategy:
      matrix:
        python:
          - '3.8'
          - '3.9'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          brew install bison flex xquartz
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/flex/bin" >> $GITHUB_PATH
          python -m pip install --upgrade pip setuptools wheel
      - name: Build wheel
        env:
          NPROCS: 5
        run: python setup.py bdist_wheel
      - name: Wheel path
        id: wheel
        working-directory: pybuild/dist/
        run: echo "wheel=$(ls *.whl)" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v3
        with:
          name: pypi-macos-py${{ matrix.python }}
          path: pybuild/dist/${{ steps.wheel.outputs.wheel }}

  manylinux:
    name: Wheels for manylinux
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux${{ matrix.manylinux }}_x86_64:latest
    env:
      FLEX_VERSION: '2.6.4'
      BISON_VERSION: ${{ matrix.bison_version }}
      SWIG_VERSION: ${{ matrix.swig_version }}
      CMAKE_VERSION: '3.24.2'
    strategy:
      matrix:
        manylinux:
        - 2014
        - _2_28
        cpython_version:
        - 'cp38-cp38'
        - 'cp39-cp39'
        include:
          - manylinux: 2014
            bison_version: 'bison-3.0.4-2.el7'
            swig_version: 'swig3-3.0.12-17.el7'
          - manylinux: _2_28
            bison_version: 'bison-3.0.4-10.el8'
            swig_version: 'swig-3.0.12-19.module_el8.3.0+6167+838326ab'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install dependencies
      run: yum install -y $BISON_VERSION $SWIG_VERSION
    - name: Install flex
      run: |
        mkdir -p $HOME/flex
        curl -L https://github.com/westes/flex/releases/download/v$FLEX_VERSION/flex-$FLEX_VERSION.tar.gz | tar xz --strip-components=1 -C $HOME/flex
        cd $HOME/flex
        ./configure
        make -j
        make install
    - name: Install cmake
      run: curl -L https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz | tar xz --strip-components=1 -C /usr
    - name: Build wheel
      env:
        NPROCS: 5
      run: |
        /opt/python/${{ matrix.cpython_version }}/bin/python setup.py bdist_wheel
        auditwheel repair pybuild/dist/*.whl
    - name: Wheel path
      id: wheel
      working-directory: wheelhouse
      run: echo "wheel=$(ls *.whl)" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v3
      with:
        name: pypi-manylinux${{ matrix.manylinux }}-${{ matrix.cpython_version }}
        path: wheelhouse/${{ steps.wheel.outputs.wheel }}


  windows:
    name: Wheels for Windows
    runs-on: windows-latest
    strategy:
      matrix:
        python:
        - '3.8'
        - '3.9'
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
    - uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\AppData\Local\Temp\chocolatey
        key: ${{ runner.os }}-chocolatey-python-1
        restore-keys: |
          ${{ runner.os }}-chocolatey-python-
          ${{ runner.os }}-chocolatey-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        choco install winflexbison3 --version 2.5.24.20210105
    - name: Build wheel
      env:
        NPROCS: 5
      run: python setup.py bdist_wheel
    - name: Wheel path
      id: wheel
      working-directory: pybuild/dist/
      run: echo "wheel=$(Get-ChildItem -name *.whl)" >> $GITHUB_OUTPUT
    - uses: actions/upload-artifact@v3
      with:
        name: pypi-windows-py${{ matrix.python }}
        path: pybuild/dist/${{ steps.wheel.outputs.wheel }}
